server:
  port: 8081
  websocket-port: 9091
#  servlet:
#    context-path: "/api/v1"

hash:
  salt: "g3e5o1t2g3n7e4m6k4k8h4v7l7g6n5z3"

token:
  secret: "xzcccim"
  exp: '#{60 * 60 * 24 * 30}'  # 过期时间默认为毫秒

spring:
  datasource:
    driver: com.mysql.cj.jdbc.Driver
    username: root
    password: "@Wsnidcl1"
    url: jdbc:mysql://106.54.53.176:3306/im?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true
  redis:
    user_database: 4
    redisson_database: 5
    host: 127.0.0.1
    port: 6379
    #    password: "@Wsnidcl1"
  liquibase:
    change-log: classpath:liquibase/master.yml
    enabled: true
  mail:
    host: smtp.163.com
    username: 15223124096@163.com
    password: "KDHTFSSFWBHVTYQY"
    protocol: smtp
    properties:
      mail.smtp.auth: true
      mail.smtp.port: 465
      mail.smtp.starttls.enable: true
      mail.smtp.starttls.required: true
      mail.smtp.ssl.enable: true
    default-encoding: utf-8
    exp: '#{60 * 5}'
    port: 465

friendship:
  friend_limit: 200 #限制好友数量


management:
  endpoints:
    web:
      exposure:
        include: "*"
        exclude: configprops
  endpoint:
    health:
      show-details: ALWAYS
  metrics:
    tags:
      application: ${server.servlet.context-path}
#wx:
#  config:
#    originalid: gh_5173f25488b7
#    appid: wxe3c28f9365bbf6cb
#    appSecret: a1a6bf5a407d655bc2b8ed0c3e87474c
#    token: xzccc
#    qrCodeUrl: https://api.weixin.qq.com/cgi-bin/qrcode/create?access_token=TOKEN                                     #获取二维码
#    accessTokenUrl: https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&appid=APPID&secret=APPSECRET       #基础接口的token
#    openIdUrl: https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&appid=APPID&secret=APPSECRET      #获取openId
#    userInfoUrl: https://api.weixin.qq.com/sns/userinfo?access_token=ACCESS_TOKEN&openid=OPENID&lang=zh_CN



app:
  config:
    api-version: v1

#ok:
#  http:
#    connect-timeout: 60
#    read-timeout: 60
#    write-timeout: 60
#    # 连接池中整体的空闲连接的最大数量
#    max-idle-connections: 200
#    # 连接空闲时间最多为 300 秒
#    keep-alive-duration: 300

limit:
  email:
    exp: '#{30}'